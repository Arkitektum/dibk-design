"use strict";(self.webpackChunkdibk_design=self.webpackChunkdibk_design||[]).push([[602],{"./src/stories/CheckBoxList.stories.jsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Compact:function(){return Compact},Default:function(){return Default},Required:function(){return Required},Themed:function(){return Themed},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return CheckBoxList_stories}});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),helpers=__webpack_require__("./src/functions/helpers.js"),asteriskurl=__webpack_require__("./src/assets/svg/asterisk.svg?url"),CheckBoxList_module_checkBoxList="CheckBoxList_checkBoxList__U47JD",CheckBoxList_module_requiredSymbol="CheckBoxList_requiredSymbol__+jZAJ",jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),CheckBoxList=function CheckBoxList(props){var _props$legend;return(0,jsx_runtime.jsxs)("fieldset",{className:CheckBoxList_module_checkBoxList,children:[null!==(_props$legend=props.legend)&&void 0!==_props$legend&&_props$legend.length?(0,jsx_runtime.jsxs)("legend",{children:[props.legend,props.required&&(0,jsx_runtime.jsx)("img",{src:asteriskurl.Z,alt:"",className:CheckBoxList_module_requiredSymbol})]}):null,function renderChildElements(childElements){return(0,helpers.vf)(childElements).map((function(childElement,index){return react.cloneElement(childElement,{requiredGroup:props.required,compact:props.compact,key:"checkboxListItem-".concat(index)})}))}(react.Children.toArray(props.children))]})};CheckBoxList.__docgenInfo={description:"",methods:[],displayName:"CheckBoxList",props:{legend:{description:"",type:{name:"string"},required:!1},required:{description:"",type:{name:"bool"},required:!1},compact:{description:"",type:{name:"bool"},required:!1}}};var _Default$parameters,_Default$parameters2,_Default$parameters2$,_Required$parameters,_Required$parameters2,_Required$parameters3,_Compact$parameters,_Compact$parameters2,_Compact$parameters2$,_Themed$parameters,_Themed$parameters2,_Themed$parameters2$d,stories_CheckBoxList=CheckBoxList,CheckBoxListItem=__webpack_require__("./src/stories/CheckBoxListItem.jsx"),customTheme=__webpack_require__("./src/data/customTheme.js"),CheckBoxList_stories={title:"Example/CheckBoxList",component:stories_CheckBoxList,argTypes:{}},Template=function Template(args){var checkBoxListArgs=(0,objectSpread2.Z)({},args);delete checkBoxListArgs.theme;var checkBoxListItemArgs={theme:args.theme};return(0,jsx_runtime.jsxs)(stories_CheckBoxList,(0,objectSpread2.Z)((0,objectSpread2.Z)({},checkBoxListArgs),{},{children:[(0,jsx_runtime.jsx)(CheckBoxListItem.Z,{onChange:function onChange(){console.log("onchange")},checked:!0,name:"checkboxlist",theme:checkBoxListItemArgs.theme,id:"checkboxList-listItem-1",children:"Label for checked checkbox"}),(0,jsx_runtime.jsx)(CheckBoxListItem.Z,{onChange:function onChange(){console.log("onchange")},name:"checkboxlist",theme:checkBoxListItemArgs.theme,id:"checkboxList-listItem-2",children:"Label for unchecked checkbox"})]}))},Default=Template.bind({});Default.args={legend:"Default checkbox list"};var Required=Template.bind({});Required.args={legend:"Required checkbox list",required:!0};var Compact=Template.bind({});Compact.args={legend:"Compact checkbox list",compact:!0};var Themed=Template.bind({});Themed.args={legend:"Themed checkbox list",theme:customTheme.Z},Default.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Default.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Default$parameters=Default.parameters)||void 0===_Default$parameters?void 0:_Default$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:'args => {\n  const checkBoxListArgs = {\n    ...args\n  };\n  delete checkBoxListArgs.theme;\n  const checkBoxListItemArgs = {\n    theme: args.theme\n  };\n  return <CheckBoxList {...checkBoxListArgs}>\n            <CheckBoxListItem onChange={() => {\n      console.log("onchange");\n    }} checked={true} name="checkboxlist" theme={checkBoxListItemArgs.theme} id="checkboxList-listItem-1">\n                Label for checked checkbox\n            </CheckBoxListItem>\n            <CheckBoxListItem onChange={() => {\n      console.log("onchange");\n    }} name="checkboxlist" theme={checkBoxListItemArgs.theme} id="checkboxList-listItem-2">\n                Label for unchecked checkbox\n            </CheckBoxListItem>\n        </CheckBoxList>;\n}'},null===(_Default$parameters2=Default.parameters)||void 0===_Default$parameters2||null===(_Default$parameters2$=_Default$parameters2.docs)||void 0===_Default$parameters2$?void 0:_Default$parameters2$.source)})}),Required.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Required.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Required$parameters=Required.parameters)||void 0===_Required$parameters?void 0:_Required$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:'args => {\n  const checkBoxListArgs = {\n    ...args\n  };\n  delete checkBoxListArgs.theme;\n  const checkBoxListItemArgs = {\n    theme: args.theme\n  };\n  return <CheckBoxList {...checkBoxListArgs}>\n            <CheckBoxListItem onChange={() => {\n      console.log("onchange");\n    }} checked={true} name="checkboxlist" theme={checkBoxListItemArgs.theme} id="checkboxList-listItem-1">\n                Label for checked checkbox\n            </CheckBoxListItem>\n            <CheckBoxListItem onChange={() => {\n      console.log("onchange");\n    }} name="checkboxlist" theme={checkBoxListItemArgs.theme} id="checkboxList-listItem-2">\n                Label for unchecked checkbox\n            </CheckBoxListItem>\n        </CheckBoxList>;\n}'},null===(_Required$parameters2=Required.parameters)||void 0===_Required$parameters2||null===(_Required$parameters3=_Required$parameters2.docs)||void 0===_Required$parameters3?void 0:_Required$parameters3.source)})}),Compact.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Compact.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Compact$parameters=Compact.parameters)||void 0===_Compact$parameters?void 0:_Compact$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:'args => {\n  const checkBoxListArgs = {\n    ...args\n  };\n  delete checkBoxListArgs.theme;\n  const checkBoxListItemArgs = {\n    theme: args.theme\n  };\n  return <CheckBoxList {...checkBoxListArgs}>\n            <CheckBoxListItem onChange={() => {\n      console.log("onchange");\n    }} checked={true} name="checkboxlist" theme={checkBoxListItemArgs.theme} id="checkboxList-listItem-1">\n                Label for checked checkbox\n            </CheckBoxListItem>\n            <CheckBoxListItem onChange={() => {\n      console.log("onchange");\n    }} name="checkboxlist" theme={checkBoxListItemArgs.theme} id="checkboxList-listItem-2">\n                Label for unchecked checkbox\n            </CheckBoxListItem>\n        </CheckBoxList>;\n}'},null===(_Compact$parameters2=Compact.parameters)||void 0===_Compact$parameters2||null===(_Compact$parameters2$=_Compact$parameters2.docs)||void 0===_Compact$parameters2$?void 0:_Compact$parameters2$.source)})}),Themed.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Themed.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Themed$parameters=Themed.parameters)||void 0===_Themed$parameters?void 0:_Themed$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:'args => {\n  const checkBoxListArgs = {\n    ...args\n  };\n  delete checkBoxListArgs.theme;\n  const checkBoxListItemArgs = {\n    theme: args.theme\n  };\n  return <CheckBoxList {...checkBoxListArgs}>\n            <CheckBoxListItem onChange={() => {\n      console.log("onchange");\n    }} checked={true} name="checkboxlist" theme={checkBoxListItemArgs.theme} id="checkboxList-listItem-1">\n                Label for checked checkbox\n            </CheckBoxListItem>\n            <CheckBoxListItem onChange={() => {\n      console.log("onchange");\n    }} name="checkboxlist" theme={checkBoxListItemArgs.theme} id="checkboxList-listItem-2">\n                Label for unchecked checkbox\n            </CheckBoxListItem>\n        </CheckBoxList>;\n}'},null===(_Themed$parameters2=Themed.parameters)||void 0===_Themed$parameters2||null===(_Themed$parameters2$d=_Themed$parameters2.docs)||void 0===_Themed$parameters2$d?void 0:_Themed$parameters2$d.source)})});var __namedExportsOrder=["Default","Required","Compact","Themed"]}}]);
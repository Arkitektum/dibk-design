"use strict";(self.webpackChunkdibk_design=self.webpackChunkdibk_design||[]).push([[470],{"./src/stories/RadioButtonList.stories.jsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Compact:function(){return Compact},Default:function(){return Default},Required:function(){return Required},Themed:function(){return Themed},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return RadioButtonList_stories}});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),helpers=__webpack_require__("./src/functions/helpers.js"),asteriskurl=__webpack_require__("./src/assets/svg/asterisk.svg?url"),RadioButtonList_module_radioButtonList="RadioButtonList_radioButtonList__t1T7R",RadioButtonList_module_requiredSymbol="RadioButtonList_requiredSymbol__Wd-bv",jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),RadioButtonList=function RadioButtonList(props){var _props$legend;return(0,jsx_runtime.jsxs)("fieldset",{className:RadioButtonList_module_radioButtonList,children:[null!==(_props$legend=props.legend)&&void 0!==_props$legend&&_props$legend.length?(0,jsx_runtime.jsxs)("legend",{children:[props.legend,props.required&&(0,jsx_runtime.jsx)("img",{src:asteriskurl.Z,alt:"",className:RadioButtonList_module_requiredSymbol})]}):null,function renderChildElements(childElements){return(0,helpers.vf)(childElements).map((function(childElement,index){var _childElement$type,childElementProps="RadioButtonListItem"===(null==childElement||null===(_childElement$type=childElement.type)||void 0===_childElement$type?void 0:_childElement$type.name)?{requiredGroup:props.required,compact:props.compact,key:"radioButtonListItem-".concat(index)}:null;return react.cloneElement(childElement,childElementProps)}))}(react.Children.toArray(props.children))]})};RadioButtonList.__docgenInfo={description:"",methods:[],displayName:"RadioButtonList",props:{legend:{description:"",type:{name:"string"},required:!1},required:{description:"",type:{name:"bool"},required:!1},compact:{description:"",type:{name:"bool"},required:!1}}};var _Default$parameters,_Default$parameters2,_Default$parameters2$,_Required$parameters,_Required$parameters2,_Required$parameters3,_Compact$parameters,_Compact$parameters2,_Compact$parameters2$,_Themed$parameters,_Themed$parameters2,_Themed$parameters2$d,stories_RadioButtonList=RadioButtonList,RadioButtonListItem=__webpack_require__("./src/stories/RadioButtonListItem.jsx"),customTheme=__webpack_require__("./src/data/customTheme.js"),RadioButtonList_stories={title:"Example/RadioButtonList",component:stories_RadioButtonList,argTypes:{}},Template=function Template(args){var radioButtonListArgs=(0,objectSpread2.Z)({},args);delete radioButtonListArgs.theme;var radioButtonListItemArgs={theme:args.theme};return(0,jsx_runtime.jsxs)(stories_RadioButtonList,(0,objectSpread2.Z)((0,objectSpread2.Z)({},radioButtonListArgs),{},{children:[(0,jsx_runtime.jsx)(RadioButtonListItem.Z,{onChange:function onChange(){console.log("onchange")},inputValue:"value 1",name:"radio-button-list-list-item",theme:radioButtonListItemArgs.theme,id:"radioButtonList-listItem-1",checked:!0,children:"Checked radio button"}),(0,jsx_runtime.jsx)(RadioButtonListItem.Z,{onChange:function onChange(){console.log("onchange")},inputValue:"value 2",name:"radio-button-list-list-item",theme:radioButtonListItemArgs.theme,id:"radioButtonList-listItem-2",children:"Unchecked radio button"})]}))},Default=Template.bind({});Default.args={legend:"Default radio button list"};var Required=Template.bind({});Required.args={legend:"Required radio button list",required:!0};var Compact=Template.bind({});Compact.args={legend:"Compact radio button list",compact:!0};var Themed=Template.bind({});Themed.args={legend:"Themed radio button list",theme:customTheme.Z},Default.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Default.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Default$parameters=Default.parameters)||void 0===_Default$parameters?void 0:_Default$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:'args => {\n  const radioButtonListArgs = {\n    ...args\n  };\n  delete radioButtonListArgs.theme;\n  const radioButtonListItemArgs = {\n    theme: args.theme\n  };\n  return <RadioButtonList {...radioButtonListArgs}>\n            <RadioButtonListItem onChange={() => {\n      console.log("onchange");\n    }} inputValue="value 1" name="radio-button-list-list-item" theme={radioButtonListItemArgs.theme} id="radioButtonList-listItem-1" checked={true}>\n                Checked radio button\n            </RadioButtonListItem>\n            <RadioButtonListItem onChange={() => {\n      console.log("onchange");\n    }} inputValue="value 2" name="radio-button-list-list-item" theme={radioButtonListItemArgs.theme} id="radioButtonList-listItem-2">\n                Unchecked radio button\n            </RadioButtonListItem>\n        </RadioButtonList>;\n}'},null===(_Default$parameters2=Default.parameters)||void 0===_Default$parameters2||null===(_Default$parameters2$=_Default$parameters2.docs)||void 0===_Default$parameters2$?void 0:_Default$parameters2$.source)})}),Required.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Required.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Required$parameters=Required.parameters)||void 0===_Required$parameters?void 0:_Required$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:'args => {\n  const radioButtonListArgs = {\n    ...args\n  };\n  delete radioButtonListArgs.theme;\n  const radioButtonListItemArgs = {\n    theme: args.theme\n  };\n  return <RadioButtonList {...radioButtonListArgs}>\n            <RadioButtonListItem onChange={() => {\n      console.log("onchange");\n    }} inputValue="value 1" name="radio-button-list-list-item" theme={radioButtonListItemArgs.theme} id="radioButtonList-listItem-1" checked={true}>\n                Checked radio button\n            </RadioButtonListItem>\n            <RadioButtonListItem onChange={() => {\n      console.log("onchange");\n    }} inputValue="value 2" name="radio-button-list-list-item" theme={radioButtonListItemArgs.theme} id="radioButtonList-listItem-2">\n                Unchecked radio button\n            </RadioButtonListItem>\n        </RadioButtonList>;\n}'},null===(_Required$parameters2=Required.parameters)||void 0===_Required$parameters2||null===(_Required$parameters3=_Required$parameters2.docs)||void 0===_Required$parameters3?void 0:_Required$parameters3.source)})}),Compact.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Compact.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Compact$parameters=Compact.parameters)||void 0===_Compact$parameters?void 0:_Compact$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:'args => {\n  const radioButtonListArgs = {\n    ...args\n  };\n  delete radioButtonListArgs.theme;\n  const radioButtonListItemArgs = {\n    theme: args.theme\n  };\n  return <RadioButtonList {...radioButtonListArgs}>\n            <RadioButtonListItem onChange={() => {\n      console.log("onchange");\n    }} inputValue="value 1" name="radio-button-list-list-item" theme={radioButtonListItemArgs.theme} id="radioButtonList-listItem-1" checked={true}>\n                Checked radio button\n            </RadioButtonListItem>\n            <RadioButtonListItem onChange={() => {\n      console.log("onchange");\n    }} inputValue="value 2" name="radio-button-list-list-item" theme={radioButtonListItemArgs.theme} id="radioButtonList-listItem-2">\n                Unchecked radio button\n            </RadioButtonListItem>\n        </RadioButtonList>;\n}'},null===(_Compact$parameters2=Compact.parameters)||void 0===_Compact$parameters2||null===(_Compact$parameters2$=_Compact$parameters2.docs)||void 0===_Compact$parameters2$?void 0:_Compact$parameters2$.source)})}),Themed.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Themed.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Themed$parameters=Themed.parameters)||void 0===_Themed$parameters?void 0:_Themed$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:'args => {\n  const radioButtonListArgs = {\n    ...args\n  };\n  delete radioButtonListArgs.theme;\n  const radioButtonListItemArgs = {\n    theme: args.theme\n  };\n  return <RadioButtonList {...radioButtonListArgs}>\n            <RadioButtonListItem onChange={() => {\n      console.log("onchange");\n    }} inputValue="value 1" name="radio-button-list-list-item" theme={radioButtonListItemArgs.theme} id="radioButtonList-listItem-1" checked={true}>\n                Checked radio button\n            </RadioButtonListItem>\n            <RadioButtonListItem onChange={() => {\n      console.log("onchange");\n    }} inputValue="value 2" name="radio-button-list-list-item" theme={radioButtonListItemArgs.theme} id="radioButtonList-listItem-2">\n                Unchecked radio button\n            </RadioButtonListItem>\n        </RadioButtonList>;\n}'},null===(_Themed$parameters2=Themed.parameters)||void 0===_Themed$parameters2||null===(_Themed$parameters2$d=_Themed$parameters2.docs)||void 0===_Themed$parameters2$d?void 0:_Themed$parameters2$d.source)})});var __namedExportsOrder=["Default","Required","Compact","Themed"]}}]);
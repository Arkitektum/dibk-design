@import "../style/global.scss";

@include keyframes(pushnext) {
  0% {
    @include transform(rotate(45deg) translate3d(0, 0, 0));
  }

  50% {
    @include transform(rotate(45deg) translate3d(2px, -2px, 0));
  }

  100% {
    @include transform(rotate(45deg) translate3d(0, 0, 0));
  }
}
@include keyframes(pushprev) {
  0% {
    @include transform(rotate(-135deg) translate3d(0, 0, 0));
  }

  50% {
    @include transform(rotate(-135deg) translate3d(-2px, 2px, 0));
  }

  100% {
    @include transform(rotate(-135deg) translate3d(0, 0, 0));
  }
}

.button {
  @include appearance(none);
  @include border-radius(0);
  @include transition(
    filter $default-transition,
    background-color $default-transition,
    color $default-transition,
    border-color $default-transition
  );
  font-family: $default-font;
  border-style: solid;
  border-width: 1px;
  border-color: var(--color-primary, $color-primary);
  cursor: pointer;
  line-height: 1;
  position: relative;
  text-align: center;
  text-decoration: none;
  display: inline-block;

  font-size: 17px;
  font-weight: 500;
  @media only screen and (min-width: $screen-sm) {
    font-size: 20px;
  }
  &:not(.noMargin) {
    margin-right: 5px;
    margin-bottom: 8px;
  }

  &:focus {
    outline-offset: 3px;
  }

  &:focus-visible,
  &:focus-within {
    outline-color: var(--color-primary, $color-primary);
  }

  &.regular {
    padding: 16px 24px;
  }

  &.small {
    padding: 6px 24px;
    min-width: 80px;
    line-height: 18px;
    @media only screen and (min-width: $screen-sm) {
      line-height: 21px;
      padding: 6px 32px;
    }
  }

  &.primary {
    background-color: var(--color-primary, $color-primary);
    color: var(--color-primary-contrast, $color-primary-contrast);
    &:hover:not(.noHover),
    &:focus-visible {
      background-color: var(--color-primary-light, $color-primary-light);
      border-color: var(--color-primary-light, $color-primary-light);
      color: var(--color-primary-contrast, $color-primary-contrast);
      &:after,
      &:before {
        border-color: var(--color-primary-light, $color-primary-light);
      }
    }
    &:active:not(.noHover),
    &:active:hover:not(.noHover) {
      background-color: var(--color-primary-x-light, $color-primary-x-light);
      border-color: var(--color-primary-x-light, $color-primary-x-light);
      color: var(--color-primary-contrast, $color-primary-contrast);
      &:after,
      &:before {
        border-color: var(--color-primary-x-light, $color-primary-x-light);
      }
    }
  }

  &.secondary {
    background-color: var(--color-secondary, $color-secondary);
    color: var(--color-secondary-contrast, $color-secondary-contrast);
    border-color: var(--color-secondary-x-light, $color-secondary-x-light);
    &:hover:not(.noHover),
    &:focus-visible {
      background-color: var(--color-secondary-light, $color-secondary-x-light);
      color: var(--color-secondary-contrast, $color-secondary-contrast);
      &:after,
      &:before {
        border-color: var(--color-secondary-light, $color-secondary-x-light);
      }
    }
    &:active:not(.noHover),
    &:active:hover:not(.noHover) {
      background-color: var(--color-secondary-x-light, $color-secondary-light);
      color: var(--color-secondary-contrast, $color-secondary-contrast);
      &:after,
      &:before {
        border-color: var(--color-secondary-x-light, $color-secondary-light);
      }
    }
  }

  &:disabled,
  &.disabled {
    &.primary,
    &.secondary {
      background-color: var(--color-primary, $color-primary);
      cursor: default;
      color: var(--color-primary-contrast, $color-primary-contrast);
      border: 1px solid var(--color-primary, $color-primary);
      opacity: 0.2;
      filter: saturate(3);
      &:hover:not(.noHover),
      &:focus-visible,
      &:active:not(.noHover),
      &:active:hover:not(.noHover) {
        background-color: var(--color-primary, $color-primary);
        cursor: default;
        color: var(--color-primary-contrast, $color-primary-contrast);
        border: 1px solid var(--color-primary, $color-primary);
        &:before,
        &:after {
          border-color: var(--color-primary-contrast, $color-primary-contrast);
        }
      }
      &:before,
      &:after {
        border-color: var(--color-primary-contrast, $color-primary-contrast);
      }
    }
  }

  &.hasErrors {
    @include box-shadow(0 0 2px 1px var(--color-error, $color-error));
    border-color: var(--color-error, $color-error);
  }

  &.rounded {
    border-radius: 20px;
  }

  &.hasArrowLeft {
    &:before {
      @include transform(rotate(-135deg));
      content: " ";
      display: inline-block;
      margin-right: 1em;
      width: 0.5rem;
      height: 0.5rem;
      vertical-align: middle;
      border-style: solid;
      border-width: 2px 2px 0 0;
      margin-right: 1em;
      @media only screen and (min-width: $screen-sm) {
        left: 1em;
      }
    }
    &:not(:disabled),
    &:not(.disabled) {
      &.primary {
        &:before {
          border-color: var(--color-primary-contrast, $color-primary-contrast);
        }
      }
      &.secondary {
        &:before {
          border-color: var(--color-secondary-contrast, $color-secondary-contrast);
        }
      }
      &:hover:not(.noHover),
      &:focus-visible,
      &:active:not(.noHover),
      &:active:hover:not(.noHover) {
        &:before {
          @include animation(pushprev 0.8s linear infinite);
        }
        &.primary {
          &:before {
            border-color: var(--color-primary-contrast, $color-primary-contrast);
          }
        }
        &.secondary {
          &:before {
            border-color: var(--color-secondary-contrast, $color-secondary-contrast);
          }
        }
      }
    }
  }

  &.hasArrowRight {
    &:after {
      @include transform(rotate(45deg));
      content: " ";
      display: inline-block;
      margin-left: 1em;
      width: 0.5rem;
      height: 0.5rem;
      vertical-align: middle;
      border-style: solid;
      border-width: 2px 2px 0 0;
      margin-left: 1em;
      @media only screen and (min-width: $screen-sm) {
        right: 1em;
      }
    }

    &:not(:disabled),
    &:not(.disabled) {
      &.primary {
        &:after {
          border-color: var(--color-primary-contrast, $color-primary-contrast);
        }
      }
      &.secondary {
        &:after {
          border-color: var(--color-secondary-contrast, $color-secondary-contrast);
        }
      }

      &:hover:not(.noHover),
      &:focus-visible,
      &:active:not(.noHover),
      &:active:hover:not(.noHover) {
        &:after {
          @include animation(pushnext 0.8s linear infinite);
        }
        &.primary {
          &:after {
            border-color: var(--color-primary-contrast, $color-primary-contrast);
          }
        }
        &.secondary {
          &:after {
            border-color: var(--color-secondary-contrast, $color-secondary-contrast);
          }
        }
      }
    }
  }
}

label.button {
  input[type="radio"] {
    @include appearance(none);
    margin: 0;
  }
}
